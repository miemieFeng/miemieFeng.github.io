{
    "version": "https://jsonfeed.org/version/1",
    "title": "咩咩君 • All posts by \"hexo\" tag",
    "description": "coding日常",
    "home_page_url": "http://miemieFeng.github.io",
    "items": [
        {
            "id": "http://miemiefeng.github.io/%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BA%91%E5%B0%8F%E8%AE%B0/",
            "url": "http://miemiefeng.github.io/%E5%8D%9A%E5%AE%A2%E4%B8%8A%E4%BA%91%E5%B0%8F%E8%AE%B0/",
            "title": "博客上云小记",
            "date_published": "2021-10-18T06:51:04.000Z",
            "content_html": "<h3 id=\"一-服务器和域名\"><a class=\"markdownIt-Anchor\" href=\"#一-服务器和域名\">#</a> 一、服务器和域名</h3>\n<ul>\n<li>腾讯云轻量级服务器</li>\n<li>腾讯云域名</li>\n</ul>\n<p>服务器系统  <code>  Centos7</code></p>\n<h5 id=\"1-配置nginx\"><a class=\"markdownIt-Anchor\" href=\"#1-配置nginx\">#</a> 1、配置 <code>nginx</code></h5>\n<p>使用云命令安装</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure>\n<p>启动服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl start nginx</span><br><span class=\"line\">systemctl enable nginx</span><br></pre></td></tr></table></figure>\n<h5 id=\"2-配置服务器路由\"><a class=\"markdownIt-Anchor\" href=\"#2-配置服务器路由\">#</a> 2、配置服务器路由</h5>\n<p>安装并启动服务器后，我们就完成了第一步，现在我们可以尝试使用自己的电脑去访问服务器的公网 IP。可以发现，公网 IP 可以打开一个 nginx 的默认网页。这样，我们就成功了第一步。</p>\n<p>但我们实际上是想要让这个地址指向我们的博客，而不是 nginx 的默认网址，这就需要我们去配置 nginx 的配置文件。很多关于 centOS 的资料都是说配置位于 etc/nginx/conf.d/ 下的 dafault.conf 这个配置文件，但腾讯云和阿里云默认的库下载的是 fedora 版本的 nginx，我们应该配置的是位于 etc/nginx/ 下的 nginx.conf 。</p>\n<p>打开 <code>/etc/nginx/</code>  目录下的 <code>nginx.conf</code>  文件 <code>vi /etc/nginx/nginx.conf</code></p>\n<p>按 i 键进入编辑模式，编辑完成后按 Esc 键退出编辑模式，依次按 ：wq 保存并退出，注意是先按：键，然后输入 wq 再按回车</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       80 default_server;</span><br><span class=\"line\">        listen       [::]:80 default_server;</span><br><span class=\"line\">        server_name  _;   #把server_name后面的_换为自己的域名，没有域名可以先填公网ip</span><br><span class=\"line\">        root         /home/hexo;       #root后面改为git仓库目录</span><br><span class=\"line\">    # Load configuration files for the default server block.</span><br><span class=\"line\">    include /etc/nginx/default.d/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">    &#125;</span><br></pre></td></tr></table></figure>\n<h5 id=\"3-安装git\"><a class=\"markdownIt-Anchor\" href=\"#3-安装git\">#</a> 3、安装 git</h5>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install git</span><br></pre></td></tr></table></figure>\n<p>配置 git 用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">adduser git</span><br></pre></td></tr></table></figure>\n<p>修改用户权限:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 740 /etc/sudoers</span><br><span class=\"line\">vi /etc/sudoers</span><br></pre></td></tr></table></figure>\n<p>按向下键在文件中找到字段</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">root    ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure>\n<p>按 i 进入编辑模式，在这一句下面加上一句</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git     ALL=(ALL)       ALL</span><br></pre></td></tr></table></figure>\n<p>按 Esc 退出编辑，再按:wq 回车保存退出后，然后将 sudoers 文件权限改回原样</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 400 /etc/sudoers</span><br></pre></td></tr></table></figure>\n<p>设置 git 用户的密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo passwd git</span><br></pre></td></tr></table></figure>\n<p>注意 git 用户的密码要在 root 用户下修改，否则会提示权限不足。下面操作也是一样，要注意是在 git 用户还是 root 用户</p>\n<p>切换到 git 用户，然后在～目录下创建.ssh 文件夹</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su git</span><br><span class=\"line\">cd ~</span><br><span class=\"line\">mkdir .ssh</span><br><span class=\"line\">cd .ssh</span><br></pre></td></tr></table></figure>\n<p>生成公钥密钥文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-keygen</span><br></pre></td></tr></table></figure>\n<p>此时在目录下就会有两个文件，分别是</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">id_rsa 和 id_rsa.pub</span><br></pre></td></tr></table></figure>\n<p>其中  <code>id_rsa.pub</code>  就是公钥文件，我们把它复制一份</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cp id_rsa.pub authorized_keys</span><br></pre></td></tr></table></figure>\n<p>这样目录下就会有一个 authorized_keys 文件</p>\n<p>然后我们修改它的权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod 755 ~</span><br><span class=\"line\">chmod 700 ~/.ssh</span><br><span class=\"line\">chmod 600 ~/.ssh/authorized_keys</span><br></pre></td></tr></table></figure>\n<p>这样我们就可以在自己的电脑上打开 cmd，使用 ssh 方式连接我们的云服务器</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh -v git@公网ip    #@后面输入云服务器公网ip</span><br></pre></td></tr></table></figure>\n<p>输入密码，就能成功登录服务器</p>\n<p>接着我们创建一个 git 的仓库，并且新建一个 post-receive 文件，用来把提交到服务器仓库操作如下:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">su root</span><br><span class=\"line\">cd /home/git</span><br><span class=\"line\">git init --bare blog.git  #在/home/git下创建新仓库blog.git</span><br><span class=\"line\">chown git:git -R blog.git #给予git用户权限</span><br></pre></td></tr></table></figure>\n<p>在  <code>/home/hexo/blog.git</code>  下，有一个自动生成的  <code>hooks</code>  文件夹，我们创建一个  <code>post-receive</code>  钩子，把提交到 <code>/home/git/blog.git</code>  仓库里的文件同步到 <code>/home/hexo</code>  中。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd blog.git/hooks</span><br><span class=\"line\">vim post-receive</span><br></pre></td></tr></table></figure>\n<p>在 <code>post-receive</code>  中输入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#!/bin/bash </span><br><span class=\"line\"> git --work-tree=/home/hexo --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure>\n<p>保存退出后授予该文件可执行权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chmod +x /home/git/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure>\n<h3 id=\"二-关于本地主机的操作\"><a class=\"markdownIt-Anchor\" href=\"#二-关于本地主机的操作\">#</a> 二、关于本地主机的操作</h3>\n<h4 id=\"1-安裝hexo\"><a class=\"markdownIt-Anchor\" href=\"#1-安裝hexo\">#</a> 1、安裝 hexo</h4>\n<p>由于使用 npm 直接下载会有很多人遇到卡顿的问题 (国外服务器)，所以我们要做的第一步工作是将 npm 换成淘宝的服务器。cmd 输入下面的命令：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm config set registry https://registry.npm.taobao.org</span><br><span class=\"line\"># 然后安装cnpm</span><br><span class=\"line\">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br></pre></td></tr></table></figure>\n<p>接下来就直接安装 hexo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cnpm install -g hexo-cli</span><br></pre></td></tr></table></figure>\n<p>然后我们选一个目录用来初始化博客<br>\n例如 D:/Blog</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">D:</span><br><span class=\"line\">cd Blog</span><br><span class=\"line\">hexo init</span><br></pre></td></tr></table></figure>\n<p>执行成功后安装两个插件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br><span class=\"line\">npm install hexo-server</span><br></pre></td></tr></table></figure>\n<p>之后我们就可以在自己的本机上查看自己的博客了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo g</span><br><span class=\"line\">hexo s</span><br></pre></td></tr></table></figure>\n<h4 id=\"2-配置服務\"><a class=\"markdownIt-Anchor\" href=\"#2-配置服務\">#</a> 2、配置服務</h4>\n<p>在刚才生成博客的目录下，找到 <code>_config.yml</code> ，打开它。</p>\n<p>找到 deploy 做如下配置，注意 deploy：下面几行一定要缩进两格</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:</span><br><span class=\"line\">  type: git</span><br><span class=\"line\">  repo: root@服务器仓库位置   #@后输入 服务器公网IP:/home/git/blog.git       </span><br><span class=\"line\">branch: master </span><br></pre></td></tr></table></figure>\n<p>保存退出</p>\n<p>在服务器上重新运行 nginx 服务器<br>\n <code>nginx -s reload</code></p>\n<p>注意每次修改配置文件按后都要重启 nginx 使之生效</p>\n<p>然后尝试写一篇文章并且发布到服务器上</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo new &quot;Hello My First Blog&quot;</span><br><span class=\"line\">hexo clean &amp;&amp; hexo generate --deploy</span><br></pre></td></tr></table></figure>\n<p>打开本地博客目录，会发现 deploy_git 目录下有了 Hello My First Blog 文件夹，里面是个简单的 index.html 文件。</p>\n<p>在服务器的 home/hexo/2020/12/17 目录下可以发现也有个 Hello My First Blog 文件，这说明文件上传成功。</p>\n",
            "tags": [
                "hexo"
            ]
        }
    ]
}